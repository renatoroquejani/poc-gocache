// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "support@example.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/cache/purge": {
            "post": {
                "description": "Remove o cache de URLs específicas para um domínio",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cache"
                ],
                "summary": "Expira o cache de URLs específicas",
                "parameters": [
                    {
                        "description": "Dados para expiração de cache",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CachePurgeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CacheInvalidationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/cache/purge-by-prefix": {
            "post": {
                "description": "Remove o cache de todas as URLs que começam com um prefixo específico",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cache"
                ],
                "summary": "Expira o cache por prefixo de URL",
                "parameters": [
                    {
                        "description": "Dados para expiração de cache por prefixo",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CachePurgeByPrefixRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CacheInvalidationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/cache/status/{domainId}": {
            "get": {
                "description": "Retorna informações sobre o status do cache para um domínio específico",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cache"
                ],
                "summary": "Obtém o status do cache para um domínio",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID do domínio",
                        "name": "domainId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CacheStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/dns": {
            "get": {
                "description": "Retorna uma lista de todos os registros DNS cadastrados para um domínio específico",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DNS"
                ],
                "summary": "Lista todos os registros DNS",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Domínio para listar os registros DNS",
                        "name": "domain",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DNSListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/dns/{domain}": {
            "post": {
                "description": "Cria um novo registro DNS na Gocache",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DNS"
                ],
                "summary": "Cria um novo registro DNS",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Domínio para o qual criar o registro DNS",
                        "name": "domain",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dados do registro DNS",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DNSCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.DNSCreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/dns/{id}": {
            "get": {
                "description": "Retorna os detalhes de um registro DNS específico",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DNS"
                ],
                "summary": "Obtém um registro DNS específico",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID do registro DNS",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DNSCreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "description": "Atualiza os dados de um registro DNS existente na Gocache",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DNS"
                ],
                "summary": "Atualiza um registro DNS existente",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID do registro DNS",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dados do domínio",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DNSUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DNSUpdateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove um registro DNS existente na Gocache",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DNS"
                ],
                "summary": "Remove um registro DNS",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID do registro DNS",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DNSDeleteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/domains": {
            "get": {
                "description": "Lista todos os domínios disponíveis na GoCache",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Domains"
                ],
                "summary": "Listar domínios",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DomainListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a domain and an associated smart rule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Domains"
                ],
                "summary": "Create domain with smart rule",
                "parameters": [
                    {
                        "description": "Domain info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DomainCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/domains/{domainID}": {
            "delete": {
                "description": "Deletes a domain",
                "tags": [
                    "Domains"
                ],
                "summary": "Delete domain",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Domain ID",
                        "name": "domainID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/rules/settings/{domain}": {
            "get": {
                "description": "Lista todas as regras de redirecionamento para um domínio específico",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Smart Rules"
                ],
                "summary": "Listar regras de redirecionamento",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Nome do domínio",
                        "name": "domain",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SmartRuleRewriteListResponse"
                        }
                    },
                    "400": {
                        "description": "Erro na requisição",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Cria uma nova regra de redirecionamento para um domínio específico",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Smart Rules"
                ],
                "summary": "Criar uma nova regra de redirecionamento",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Nome do domínio",
                        "name": "domain",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dados da regra de redirecionamento",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SmartRuleRewriteCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SmartRuleRewriteCreateResponse"
                        }
                    },
                    "400": {
                        "description": "Erro na requisição",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/rules/settings/{domain}/{id}": {
            "put": {
                "description": "Atualiza uma regra de redirecionamento específica de um domínio",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Smart Rules"
                ],
                "summary": "Atualizar uma regra de redirecionamento",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Nome do domínio",
                        "name": "domain",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID da regra de redirecionamento",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dados da regra de redirecionamento",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SmartRuleRewriteCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SmartRuleRewriteUpdateResponse"
                        }
                    },
                    "400": {
                        "description": "Erro na requisição",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove uma regra de redirecionamento específica de um domínio",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Smart Rules"
                ],
                "summary": "Remover uma regra de redirecionamento",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Nome do domínio",
                        "name": "domain",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID da regra de redirecionamento",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SmartRuleRewriteDeleteResponse"
                        }
                    },
                    "400": {
                        "description": "Erro na requisição",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/rules/{domain}/simplified": {
            "post": {
                "description": "Cria uma regra padrão de redirecionamento com domínio especificado na URL e parâmetros simplificados no body",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Smart Rules"
                ],
                "summary": "Criar regra padrão de redirecionamento usando domínio da URL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Domínio principal (ex: exod.com.br)",
                        "name": "domain",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Parâmetros simplificados (sem parent_domain)",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SmartRuleSimplifiedRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SmartRuleRewriteCreateResponse"
                        }
                    },
                    "400": {
                        "description": "Erro na requisição",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.CacheInvalidationResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "models.CachePurgeByPrefixRequest": {
            "type": "object",
            "required": [
                "domain_id",
                "prefix"
            ],
            "properties": {
                "domain_id": {
                    "type": "integer"
                },
                "prefix": {
                    "type": "string"
                }
            }
        },
        "models.CachePurgeRequest": {
            "type": "object",
            "required": [
                "domain_id",
                "urls"
            ],
            "properties": {
                "domain_id": {
                    "type": "integer"
                },
                "urls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.CacheStatus": {
            "type": "object",
            "properties": {
                "pending": {
                    "type": "integer"
                },
                "processed": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.CacheStatusResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.CacheStatus"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "models.DNSCreateRequest": {
            "type": "object",
            "required": [
                "cloud",
                "content",
                "name",
                "ttl",
                "type"
            ],
            "properties": {
                "cloud": {
                    "type": "integer"
                },
                "content": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ttl": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.DNSCreateResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "object",
                    "properties": {
                        "records": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "cloud": {
                                        "type": "string"
                                    },
                                    "content": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "record_id": {
                                        "description": "Pode ser string ou número"
                                    },
                                    "ttl": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "status_code": {
                    "type": "integer"
                }
            }
        },
        "models.DNSDeleteResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string"
                },
                "status_code": {
                    "type": "integer"
                }
            }
        },
        "models.DNSListResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "object",
                    "properties": {
                        "records": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "cloud": {
                                        "type": "string"
                                    },
                                    "content": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "record_id": {
                                        "type": "string"
                                    },
                                    "ttl": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "status_code": {
                    "type": "integer"
                }
            }
        },
        "models.DNSUpdateRequest": {
            "type": "object",
            "required": [
                "cloud",
                "content",
                "name",
                "ttl",
                "type"
            ],
            "properties": {
                "cloud": {
                    "type": "integer"
                },
                "content": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ttl": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.DNSUpdateResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "object",
                    "properties": {
                        "records": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "cloud": {
                                        "type": "string"
                                    },
                                    "content": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "record_id": {
                                        "description": "Pode ser string ou número"
                                    },
                                    "ttl": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "status_code": {
                    "type": "integer"
                }
            }
        },
        "models.DomainCreateRequest": {
            "type": "object",
            "required": [
                "name",
                "origin"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "origin": {
                    "type": "string"
                }
            }
        },
        "models.DomainInfo": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "models.DomainListResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "object",
                    "properties": {
                        "domains": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.DomainInfo"
                            }
                        }
                    }
                }
            }
        },
        "models.SmartRuleRewrite": {
            "type": "object",
            "properties": {
                "action": {
                    "$ref": "#/definitions/models.SmartRuleRewriteAction"
                },
                "id": {
                    "type": "string"
                },
                "match": {
                    "$ref": "#/definitions/models.SmartRuleRewriteMatch"
                },
                "metadata": {
                    "$ref": "#/definitions/models.SmartRuleRewriteMetadata"
                }
            }
        },
        "models.SmartRuleRewriteAction": {
            "type": "object",
            "properties": {
                "cross_origin": {
                    "type": "string"
                },
                "destination": {
                    "type": "string"
                },
                "redirect_to": {
                    "type": "string"
                },
                "redirect_type": {
                    "type": "string"
                },
                "rewrite_host": {
                    "type": "string"
                },
                "rewrite_uri": {
                    "type": "string"
                }
            }
        },
        "models.SmartRuleRewriteCreateRequest": {
            "type": "object",
            "properties": {
                "action": {
                    "$ref": "#/definitions/models.SmartRuleRewriteAction"
                },
                "match": {
                    "$ref": "#/definitions/models.SmartRuleRewriteMatch"
                }
            }
        },
        "models.SmartRuleRewriteCreateResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "models.SmartRuleRewriteDeleteResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "object",
                    "properties": {
                        "msg": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "models.SmartRuleRewriteListResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "object",
                    "properties": {
                        "rules": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SmartRuleRewrite"
                            }
                        }
                    }
                }
            }
        },
        "models.SmartRuleRewriteMatch": {
            "type": "object",
            "properties": {
                "device_type": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "host": {
                    "type": "string"
                },
                "request": {
                    "description": "Mantido para compatibilidade",
                    "type": "string"
                },
                "request_method": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "request_uri": {
                    "type": "string"
                }
            }
        },
        "models.SmartRuleRewriteMetadata": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "updated_on": {
                    "type": "string"
                }
            }
        },
        "models.SmartRuleRewriteUpdateResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "object",
                    "properties": {
                        "msg": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "models.SmartRuleSimplifiedRequest": {
            "type": "object",
            "required": [
                "account_id",
                "bucket_url",
                "domain",
                "parent_domain"
            ],
            "properties": {
                "account_id": {
                    "description": "ID da conta (será usado no rewrite_uri)",
                    "type": "string"
                },
                "bucket_url": {
                    "description": "URL do bucket (será usado como destino e host)",
                    "type": "string"
                },
                "domain": {
                    "description": "Domínio completo (será usado como CORS e host)",
                    "type": "string"
                },
                "parent_domain": {
                    "description": "Domínio principal (exod.com.br)",
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8081",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Gocache Integration API",
	Description:      "API para integração com o serviço de CDN Gocache",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
